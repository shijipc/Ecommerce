<%- include("../../views/partials/admin/header") %>
<style>
    .chart-canvas {
        width: 100% !important;  
        height: 300px !important; 
    }
</style>
<body>
    <div class="container-fluid mt-4">
        <h2 class="mb-4">Welcome</h2>
        <br><br>
        <div class="row mb-4">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Order Statistics Filter</h5>
                        <form id="filterForm" action="/admin/dashboard" method="GET">
                            <select id="chartFilter" name="filter" class="form-select mb-3">
                                <option value="yearly" <%= filter === 'yearly' ? 'selected' : '' %>>Yearly</option>
                                <option value="monthly" <%= filter === 'monthly' ? 'selected' : '' %>>Monthly</option>
                                <option value="weekly" <%= filter === 'weekly' ? 'selected' : '' %>>Weekly</option>
                                <option value="daily" <%= filter === 'daily' ? 'selected' : '' %>>Daily</option>
                                <option value="custom" <%= filter === 'custom' ? 'selected' : '' %>>Custom Range</option>
                            </select>
                            <!-- Added surrounding quotes for style attribute to avoid syntax issues -->
                            <div id="customDateRange" style="display: <%= filter === 'custom' ? 'block' : 'none' %>">
                                <input type="date" id="startDate" name="startDate" class="form-control mb-2" value="<%= customStartDate %>">
                                <div id="startDateError" class="text-danger"></div>
                                <input type="date" id="endDate" name="endDate" class="form-control mb-2" value="<%= customEndDate %>">
                                <div id="endDateError" class="text-danger"></div>
                            </div>
                            <button type="submit" class="btn btn-primary mb-3">Apply Filter</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="row mb-4">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Payment Methods</h5>
                        <canvas id="paymentMethodChart" class="chart-canvas"></canvas>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Category Sales Distribution</h5>
                        <canvas id="categoryPieChart" class="chart-canvas"></canvas>
                    </div>
                </div>
            </div>
        </div>
    
        <div class="row">
            <div class="col-md-4">
                <div class="card mb-4">
                    <div class="card-body">
                        <h5 class="card-title">Top 10 Best Selling Products</h5>
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Product</th>
                                        <th>Quantity</th>
                                        <th>Revenue</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% topProducts.forEach(product => { %>
                                        <tr>
                                            <td><%= product.productName %></td>
                                            <td><%= product.totalQuantity %></td>
                                            <td><%= product.totalRevenue.toFixed(2) %></td>
                                        </tr>
                                    <% }) %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
    
            <div class="col-md-4">
                <div class="card mb-4">
                    <div class="card-body">
                        <h5 class="card-title">Top 10 Best Selling Categories</h5>
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Category</th>
                                        <th>Quantity</th>
                                        <th>Revenue</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% topCategories.forEach(category => { %>
                                        <tr>
                                            <td><%= category.categoryName %></td>
                                            <td><%= category.totalQuantity %></td>
                                            <td><%= category.totalRevenue.toFixed(2) %></td>
                                        </tr>
                                    <% }) %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
    
            <div class="col-md-4">
                <div class="card mb-4">
                    <div class="card-body">
                        <h5 class="card-title">Top 10 Best Selling Brands</h5>
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Brand</th>
                                        <th>Quantity</th>
                                        <th>Revenue</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% topBrands.forEach(product => { %>
                                        <tr>
                                            <td><%= product.brandName %></td>
                                            <td><%=  product.totalQuantity %></td>
                                            <td><%= product.totalRevenue.toFixed(2) %></td>
                                        </tr>
                                    <% }) %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <script>
    // Changed to conditional to check if the data is defined before rendering
    const paymentMethodChartCtx = document.getElementById('paymentMethodChart').getContext('2d');
    const paymentMethodsData = <%- JSON.stringify(paymentMethodsData || []) %>;
    
    if (paymentMethodsData.length > 0) {
        new Chart(paymentMethodChartCtx, {
            type: 'bar',
            data: {
                labels: paymentMethodsData.map(data => data._id),
                datasets: [{
                    label: 'Number of Payments',
                    data: paymentMethodsData.map(data => data.count),
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.6)',
                        'rgba(54, 162, 235, 0.6)',
                        'rgba(255, 205, 86, 0.6)'
                    ],
                    borderColor: [
                        'rgb(255, 99, 132)',
                        'rgb(54, 162, 235)',
                        'rgb(255, 205, 86)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                },
                plugins: {
                    legend: {
                        display: false
                    },
                    title: {
                        display: true,
                        text: 'Payment Methods Distribution'
                    }
                }
            }
        });
    } else {
        paymentMethodChartCtx.font = '20px Arial';
        paymentMethodChartCtx.fillText('No data available for the selected period', 10, 50);
    }

    const categoryPieChartCtx = document.getElementById('categoryPieChart').getContext('2d');
    const categorySalesData = <%- JSON.stringify(categorySalesData || []) %>;

    if (categorySalesData.length > 0) {
        new Chart(categoryPieChartCtx, {
            type: 'pie',
            data: {
                labels: categorySalesData.map(data => data.category),
                datasets: [{
                    data: categorySalesData.map(data => data.totalSales),
                    backgroundColor: [
                        'rgb(255, 99, 132)',
                        'rgb(54, 162, 235)',
                        'rgb(255, 205, 86)',
                        'rgb(75, 192, 192)',
                        'rgb(153, 102, 255)',
                        'rgb(255, 159, 64)'
                    ]
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Category Sales Distribution'
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                let label = context.label || '';
                                if (label) {
                                    label += ': ';
                                }
                                if (context.parsed !== null) {
                                    label += new Intl.NumberFormat('en-US', { style: 'currency', currency: 'INR' }).format(context.parsed);
                                }
                                return label;
                            }
                        }
                    }
                }
            }
        });
    } else {
        categoryPieChartCtx.font = '20px Arial';
        categoryPieChartCtx.fillText('No data available for the selected period', 10, 50);
    }
        document.getElementById('chartFilter').addEventListener('change', function() {
            const customDateRange = document.getElementById('customDateRange');
            if (this.value === 'custom') {
                customDateRange.style.display = 'block';
            } else {
                customDateRange.style.display = 'none';
                document.getElementById('filterForm').submit();
            }
        });

        document.getElementById('filterForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const filter = document.getElementById('chartFilter').value;
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;
            const today = new Date().toISOString().split('T')[0];  

            document.getElementById('startDateError').textContent = '';
            document.getElementById('endDateError').textContent = '';

            let isValid = true;

            if (filter === 'custom') {
                if (!startDate || !endDate) {
                    if (!startDate) {
                        document.getElementById('startDateError').textContent = 'Start date is required.';
                    }
                    if (!endDate) {
                        document.getElementById('endDateError').textContent = 'End date is required.';
                    }
                    isValid = false;
                }

                if (startDate > today) {
                    document.getElementById('startDateError').textContent = 'Start date cannot be in the future.';
                    isValid = false;
                }

                if (endDate > today) {
                    document.getElementById('endDateError').textContent = 'End date cannot be in the future.';
                    isValid = false;
                }

                if (startDate > endDate) {
                    document.getElementById('endDateError').textContent = 'End date cannot be before the start date.';
                    isValid = false;
                }
            }

            if (isValid) {
                this.submit();
            }
        });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
</body>

<%- include("../../views/partials/admin/footer") %>