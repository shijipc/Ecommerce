<%- include("../../views/partials/admin/header") %>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
<head>
   <style>
       .thumbnails-container {
           display: flex;
           overflow-x: auto;
       }


       .thumbnail {
           margin-right: 10px;
       }
       .input-upload {
   position: relative;
}


.error-message {
           color: red;
           display: none;
       }


   </style>
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
</head>
   <section class="content-main">
       <div class="row">
           <div class="col-9">
               <div class="content-header">
                   <h2 class="content-title">Edit Product</h2>


               </div>
           </div>
           <div class="col-lg-6">
               <div class="card mb-4">

                   <div class="card-body">
                       <form method="post" action="/admin/editProduct/<%=product._id%>" enctype="multipart/form-data"
                           onsubmit="return validateForm()">
                           <div class="mb-4">
                               <label for="product_name" class="form-label">Product Name</label>
                               <input type="text" name="productName" value="<%=product.productName%>"
                                   class="form-control border" id="product_name">
                                   <div id="productName-error" class="error-message"></div>
                           </div>
                           <div class="col-lg-4 mb-4">
                               <label class="form-label">Brand</label>
                               <select class="form-select border" name="brand">
                                  <%for(let i=0;i<brand.length;i++){%>
                                    <option value="<%=brand[i].brandName%>">
                                       <%=brand[i].brandName%>   
                                    </option>
                                    <%}%>
                               </select>
                               <div id="brand-error" class="error-message"></div>


                           </div>
                           <div class="mb-4">
                               <label class="form-label">Full description</label>
                               <input name="descriptionData" value="<%=product.description%>"  class="form-control border"
                                   rows="4">
                                   <div id="description-error" class="error-message"></div>
                           </div>
                           <div class="row">
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Regular price</label>
                                       <input placeholder="$" name="regularPrice" type="text"
                                           value="<%=product.regularPrice%>" class="form-control border">
                                           <div id="regularPrice-error" class="error-message"></div>
                                   </div>
                               </div>
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Sale price</label>
                                       <input name="salePrice" type="text" value="<%=product.salePrice%>"
                                           class="form-control border">
                                   </div>
                                   <div id="salePrice-error" class="error-message"></div>
                               </div>

                               <div class="mb-4">
                                <label class="form-label">Sizes and Quantities</label>
                                <div id="sizes-container">
                                    <% product.sizes.forEach((size, index) => { %>
                                    <div class="size-quantity-row" style="margin-bottom: 10px;">
                                        <input type="number" placeholder="Size" name="sizes[<%= index %>][size]" 
                                               class="form-control border size-input" 
                                               value="<%= size.size %>" style="width: 120px; display: inline-block;" required>
                                        <input type="number" placeholder="Quantity" name="sizes[<%= index %>][quantity]" 
                                               class="form-control border" value="<%= size.quantity %>" 
                                               style="width: 120px; display: inline-block;" required>
                                        <span class="remove-size-btn" style="cursor: pointer; margin-left: 10px; color: red;" 
                                              onclick="removeSizeEntry(this)">&#10006;</span>
                                        <div class="error-message" style="color: red; font-size: 12px; display: none;">
                                            This size already exists. Please enter a different size.
                                        </div>
                                    </div>
                                    <% }) %>
                                </div>
                                <button type="button" onclick="addSizeQuantityRow()" class="btn btn-secondary mt-2">Add More Sizes</button>
                            </div>
                            
                               <!-- <div class="col-lg-4">        
                                   <div class="mb-4">
                                       <label class="form-label">Quantity</label>
                                       <input name="quantity" type="text" value="<%=product.quantity%>"
                                           class="form-control border">
                                           <div id="quantity-error" class="error-message"></div>
                                   </div>
                               </div> -->
                           </div>
                           <div class="row">
                             
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Color</label>
                                       <input name="color" type="text" value="<%=product.color%>"
                                           class="form-control border">
                                           <div id="color-error" class="error-message"></div>
                                   </div>
                               </div>
                              
                           </div>
                           <div class="card mb-4">


                               <div class="card-body">
                                   <div class="row gx-2">
                                       <div class="col-sm-6 mb-3">
                                           <label class="form-label">Category</label>
                                           <select class="form-select border" style="width: 150px;" name="category">
                                              <%for(let i=0;i<cat.length;i++){%>
                                                   <option value="<%=cat[i].name%>">
                                                      <%=cat[i].name%>
                                                   </option>
                                                  <%}%>
                                           </select>

                                           <!-- <label class="form-label">Size</label>
                                           <select class="form-select border" style="width: 150px;" name="size">                             
                                            <option value="L">L</option>
                                            <option value="M">M</option>
                                            <option value="S">S</option>
                                           </select>  -->


                                           <div id="category-error" class="error-message"></div>
                                       </div>
                                   </div>
                               </div>
                           </div>
                           <div class="card mb-2">
                               <div class="card-header">
                                   <h4>Choose images</h4>
                               </div>
                                  <%for(let i=0;i<product.productImage.length;i++){%>
                                       <div class="col-md-12">
                                           <div class="mb-4">
                                            <div class="col-12" style="position: relative;">
                                                <input type="hidden" value="<%= product.productImage[i] %>" id="imageDatas">
                                                <img class="rounded" style="width: 50px; height: 60px;" src="/uploads/re-image/<%= product.productImage[i] %>" alt="Image">                          
                                                <i onclick="deleteSingleImage('<%= product.productImage[i] %>', '<%= product._id %>')" 
                                                   style="position: absolute; top: 0; right: 0; margin-right: .5rem; cursor: pointer;" 
                                                   class="fa fa-times"></i>
                                            </div>                      
                                           </div>
                                       </div>
                                       <%}%>
                              
                                  
                               <div class="card-body">
                                   <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                       <img src="" alt="" id="imgView1">
                                       <input class="form-control" type="file" name="images" id="input1"
                                           accept="image/png, image/jpeg, image/jpg"
                                           onchange="viewImage1(event), viewImage(event, 1)">
                                           <div id="images-error" class="error-message"></div>
                                   </div>
                                   <div class="image-cropper d-flex align-items-center"
                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                   <img src="" id="croppedImg1" alt="">
                                   <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                               </div>
                                                           <div class="row">
                                                               <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                                   <img src="" alt="" id="imgView2">
                                                                   <input class="form-control" type="file" name="images" id="input2"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage2(event),viewImage(event, 2)">
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg2" alt="">
                                                                   <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                                               </div>
                                                           </div>
                                                          
                                                           <div class="row">
                                                               <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                                   <img src="" alt="" id="imgView3">
                                                                   <input class="form-control" type="file" name="images" id="input3"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage3(event),viewImage(event, 3)">
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg3" alt="">
                                                                   <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                                               </div>
                                                           </div>                                   
                                                          
                               </div>
                           </div>
                           <div>


                               <button class="btn btn-md rounded font-sm hover-up" id="updatebtn"
                                   type="button"  onclick="validateAndSubmit()">Update</button>
                           </div>
                       </form>
                   </div>
               </div>
           </div>
       </div>
       </div>
   </section>
   <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
   <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
   <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
   <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<%- include("../../views/partials/admin/footer") %>

<script>


    function validateAndSubmit() {
    if (validateForm()) {
       document.forms[0].submit();
    }
    }
      
    function validateForm() {
    console.log("Validating form");
    clearErrorMessages();
    let isValid = true;

    const name = document.getElementsByName('productName')[0].value;
    const description = document.getElementsByName('descriptionData')[0].value;
    const price = document.getElementsByName('regularPrice')[0].value;
    const saleprice = document.getElementsByName('salePrice')[0].value;
    const color = document.getElementsByName('color')[0].value;
    const imageDatas = document.getElementById("imageDatas")?.value;
    const images = document.getElementById('input1');

    if (name.trim() === "") {
        displayErrorMessage('productName-error', 'Please enter a product name.');
        isValid = false;
    }

    if (description === '') {
        displayErrorMessage('description-error', 'Please enter a product description.');
        isValid = false;
    }

    if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
        displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
        isValid = false;
    }

    if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
        displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
        isValid = false;
    }

    if (color.trim() === "") {
        displayErrorMessage('color-error', 'Please enter a color.');
        isValid = false;
    }

    if (!imageDatas && images.files.length === 0) {
        displayErrorMessage("images-error", 'Please select an image.');
        isValid = false;
    }

    // Validate sizes
    const sizeInputs = document.querySelectorAll('.size-input');
    const sizes = new Set();
    sizeInputs.forEach(input => {
        const size = input.value;
        if (sizes.has(size)) {
            const errorDiv = input.parentNode.querySelector('.error-message');
            errorDiv.textContent = 'This size already exists. Please enter a different size.';
            errorDiv.style.display = 'block';
            isValid = false;
        } else {
            sizes.add(size);
        }
    });

    if (!isValid) {
        event.preventDefault(); // Prevent form submission if validation fails
    }

    return isValid;
   }
  
           function displayErrorMessage(elementId, message) {
               var errorElement = document.getElementById(elementId);
               errorElement.innerText = message;
               errorElement.style.display = "block";
           }
    
    
           function clearErrorMessages() {
               const errorElements = document.getElementsByClassName('error-message');
               Array.from(errorElements).forEach(element => {
                   element.innerText = '';
               });
               const errorMessage = document.getElementById('errorMessage');
    
    
           }
    
    function viewImage1(event) {
               document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
           }
    
    
           function viewImage2(event) {
               document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
           }
    
    
           function viewImage3(event) {
               document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
           }
    
           function viewImage4(event) {
               document.getElementById('imgView4').src = URL.createObjectURL(event.target.files[0])
           }
    
           function viewImage(event, index) {
               let input = event.target;

               let file = input.files[0];
              let validImageTypes = ['image/jpeg', 'image/png', 'image/jpg'];

              // Check if file is an image
             if (!validImageTypes.includes(file.type)) {
                 displayErrorMessage('images-error', 'Please upload a valid image file (JPEG, PNG).');
                 input.value = ''; // Clear the input
                 return; // Stop further processing
            } else {
            clearErrorMessages('images-error'); // Clear error message if valid image
        }

               let reader = new FileReader();
               reader.onload = function () {
                   let dataURL = reader.result;
                   let image = document.getElementById('imgView' + index);
                   image.src = dataURL;
                   let cropper = new Cropper(image, {
                       aspectRatio: 1,
                       viewMode: 1,
                       guides: true,
                       background: false,
                       autoCropArea: 1,
                       zoomable: true
                   });
                   let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
                   cropperContainer.style.display = 'block';
                   let saveButton = document.querySelector('#saveButton' + index);
                   saveButton.addEventListener('click', async function () {
                       let croppedCanvas = cropper.getCroppedCanvas();
                       let croppedImage = document.getElementById("croppedImg" + index);
                       croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
                       let timestamp = new Date().getTime();
                       let fileName = `cropped-img-${timestamp}-${index}.png`;
                       await croppedCanvas.toBlob(blob => {
                           let input = document.getElementById('input' + index);
                           let imgFile = new File([blob], fileName, blob)
                           const fileList = new DataTransfer();
                           fileList.items.add(imgFile);
                           input.files = fileList.files
                       });
                       cropperContainer.style.display = 'none';
                       cropper.destroy();
                   });
               };
               reader.readAsDataURL(files);
           }
    
    
           const selectedImages = [];
       document.getElementById("imageInput").addEventListener("change", handleFileSelect);
    
    
           function handleFileSelect(event) {
               const addedImagesContainer = document.getElementById("addedImagesContainer");
               addedImagesContainer.innerHTML = "";
               const files = event.target.files;
               for (let i = 0; i < files.length; i++) {
                   const file = files[i];
                   selectedImages.push(file);
                   const thumbnail = document.createElement("div");
                   thumbnail.classList.add("thumbnail");
                   const img = document.createElement("img");
                   img.src = URL.createObjectURL(file);
                   img.alt = "thumbnail";
                   img.style.width = "50px";
                   img.style.height = "auto";
                   const removeIcon = document.createElement("span");
                   removeIcon.classList.add("remove-icon");
                   removeIcon.innerHTML = "&times;";
                   removeIcon.addEventListener("click", function () {
                       const index = selectedImages.indexOf(file);
                       if (index !== -1) {
                           selectedImages.splice(index, 1);
                       }
                       thumbnail.remove();
                   });
                   thumbnail.appendChild(img);
                   thumbnail.appendChild(removeIcon);
                   addedImagesContainer.appendChild(thumbnail);
               }
           };

    function deleteSingleImage(imageId, productId) {
    $.ajax({
        url: "/admin/deleteImage",
        method: "POST",
        data: {
            imageNameToServer: imageId,
            productIdToServer: productId
        },
        success: function (response) {
            if (response.status === true) {
                window.location.reload();
            } else {
                alert('Image deletion failed');
            }
        },
        error: function (error) {
            console.log(error);
            alert('An error occurred while deleting the image');
        }
    });
}

           
 </script>
    <script>
        function addSizeQuantityRow() {
    const index = document.querySelectorAll('.size-quantity-row').length;
    const row = document.createElement('div');
    row.className = 'size-quantity-row';
    row.style.marginBottom = '10px';
    row.innerHTML = `
        <input type="number" placeholder="Size" name="sizes[${index}][size]" 
               class="form-control border size-input" style="width: 120px; display: inline-block;" required>
        <input type="number" placeholder="Quantity" name="sizes[${index}][quantity]" 
               class="form-control border" style="width: 120px; display: inline-block;" required>
        <span class="remove-size-btn" style="cursor: pointer; margin-left: 10px; color: red;" 
              onclick="removeSizeEntry(this)">&#10006;</span>
        <div class="error-message" style="color: red; font-size: 12px; display: none;">
            This size already exists. Please enter a different size.
        </div>
    `;
    document.getElementById('sizes-container').appendChild(row);

    // Add event listener for size input validation
    const sizeInput = row.querySelector('.size-input');
    sizeInput.addEventListener('change', validateSize);
}

function validateSize(event) {
    const currentSize = event.target.value;
    const allSizes = document.querySelectorAll('.size-input');
    const errorDiv = event.target.parentNode.querySelector('.error-message');

    let isDuplicate = false;
    allSizes.forEach(input => {
        if (input !== event.target && input.value === currentSize) {
            isDuplicate = true;
        }
    });

    if (isDuplicate) {
        errorDiv.textContent = 'This size already exists. Please enter a different size.';
        errorDiv.style.display = 'block';
    } else {
        errorDiv.style.display = 'none';
    }
}
        </script>