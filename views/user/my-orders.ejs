<%- include("../../views/partials/user/header") %>

<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<style>
    .order-item {
        margin-bottom: 20px;
        border: 1px solid #ddd;
        border-radius: 8px;
        background-color: #f9f9f9;
    }
    .order-image img {
        width: 100px;
        height: 100px;
        object-fit: cover;
        border-radius: 4px;
    }
    .status-icon {
        width: 15px;
        height: 15px;
        border-radius: 50%;
        display: inline-block;
    }
    .delivered {
        background-color: blue;
    }
    .pending {
        background-color: orange;
    }
    .processing {
        background-color: green;
    }
    .cancelled {
        background-color: red;
    }
    .default {
        background-color: gray;
    }
    
.pagination {
  display: flex;
  justify-content: center;
  margin-top: 20px;
}

.pagination a {
  text-decoration: none;
  margin: 0 8px; 
  padding: 8px 12px;
  color: #333;
  border: 1px solid #ddd;
  border-radius: 4px;
  transition: background-color 0.3s;
}

.pagination a:hover {
  background-color: #f0f0f0;
}

.pagination a.active {
  background-color: #007bff;
  color: white;
  border-color: #007bff;
}

</style>

<body>
<div class="container">
    <h1>Your Orders</h1>
    <div class="search-container">
        <input type="text" id="search" placeholder="Search your orders here">
        <button id="searchBtn" class="btn btn-success">Search Orders</button>
    </div>

    <% if (orders && orders.length > 0) { %>
        <% orders.forEach((order) => { %>
            <% order.items.forEach((item) => { %>
                <div class="order-item p-3">
                    <div class="row align-items-center">
                        <div class="col-md-2">
                            <div class="order-image">
                                <% if (item.product && item.product.productImage && item.product.productImage.length > 0) { %>
                                    <img src="/uploads/product-images/<%= item.product.productImage[0] %>" alt="Order Image" class="img-fluid">
                                <% } else { %>
                                    <img src="/uploads/product-images/placeholder.jpeg" alt="Product Deleted" class="img-fluid">
                                <% } %>
                            </div>
                            <br><br>
                            <p class="mb-0 mt-2">Order ID: <%= order.orderId %></p>
                        </div>
                        <div class="col-md-3">
                            <h5><%= item.product.productName %></h5>
                            <p class="mb-0">SKU: <%= item.product.skuNumber %></p>
                            <p class="mb-0">Color: <%= item.product.color %></p>
                            <p class="mb-0">Size: <%= item.size %></p>
                        </div>
                        <div class="col-md-2">
                            <p class="font-weight-bold mb-0">Actual Price: ₹<%= item.regularPrice %></p>
                            <p class="mb-0">Quantity: <%= item.quantity %></p>
                            <p class="mb-0">Total: ₹<%= (item.regularPrice * item.quantity).toFixed(2) %></p>
                            
                            <div class="mt-2" style="background-color: #f8d7da; padding: 8px; border-radius: 5px;">
                                <p class="font-weight-bold text-success mb-0">Actual Price: ₹<%= item.regularPrice.toFixed(2) %> *<%= item.quantity %> </p>
                                <p class="text-success mb-0">Total Discount: ₹<%= ((item.regularPrice * item.quantity) -  (item.salePrice * item.quantity)).toFixed(2) %></p>
                                <p class="text-success mb-0">Saled Total: ₹<%= item.saledPrice.toFixed(2) %></p>
                            </div>
                        </div>

                        <div class="col-md-2">
                            <div class="order-status">
                                <% if (item.itemOrderStatus === 'Delivered') { %>
                                    <div class="status-icon delivered"></div>
                                <% } else if (item.itemOrderStatus === 'Pending') { %>
                                    <div class="status-icon pending"></div>
                                <% } else if (item.itemOrderStatus === 'Processing') { %>
                                    <div class="status-icon processing"></div>
                                <% } else if (item.itemOrderStatus === 'Cancelled') { %>
                                    <div class="status-icon cancelled"></div>
                                <% } else { %>
                                    <div class="status-icon default"></div>
                                <% } %>
                                <span><%= item.itemOrderStatus %></span>
                            </div>
                        </div>
                        
                        <div class="col-md-3 text-right">
                            <p class="mb-2"><%= order.date.toLocaleString() %></p>
                            <br>
                            <% if (item.itemOrderStatus === 'Pending' || item.itemOrderStatus === 'Processing') { %>
                                <button class="btn btn-sm btn-danger cancel-order-btn" data-item-order-id="<%= item.itemOrderId %>">Cancel Item</button>
                            <% } else if (item.itemOrderStatus === 'Delivered') { %>
                                <% 
                                    const deliveryDate = item.deliveryDate || order.date;
                                    const currentDate = new Date();
                                    const daysSinceDelivery = Math.floor((currentDate - new Date(deliveryDate)) / (1000 * 60 * 60 * 24));
                                %>
                                <% if (daysSinceDelivery <= 7) { %>
                                    <button class="btn btn-sm btn-warning return-order-btn" data-item-order-id="<%= item.itemOrderId %>">Return</button>
                                <% } else { %>
                                    <small class="text-muted">Return period expired</small>
                                <% } %>
                            <% } %>
                                                                    
                            <a href="/my-order/order-details/<%= order.orderId %>/<%= item.product._id %>">
                                <button class="btn btn-warning">View Order</button>
                            </a>
                        </div>
                    </div>
                </div>
            <% }) %>
        <% }) %>
    <% } else { %>
        <p>No orders found.</p>
    <% } %>
</div>

<!-- Modal for Cancel Confirmation -->

<div id="cancelModal" class="modal">
    <div class="modal-content">
        <h4>Select Reason for Cancellation</h4>
        <form id="cancelForm" onsubmit="submitCancellation(event)">
            <input type="hidden" id="cancelItemOrderId" name="itemOrderId">
            <div>
                <label><input type="radio" name="reason" value="Found cheaper alternative" required> Found cheaper alternative</label>
            </div>
            <div>
                <label><input type="radio" name="reason" value="Delivery is too late" required> Delivery is too late</label>
            </div>
            <div>
                <label><input type="radio" name="reason" value="Changed my mind" required> Changed my mind</label>
            </div>
            <div>
                <label><input type="radio" name="reason" value="Other" required> Other</label>
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
            <button type="button" class="btn btn-secondary" onclick="closeCancelModal()">Close</button>
        </form>
    </div>
</div>
 <!-- Pagination -->
 <% if (totalPages > 1) { %>
    <div class="pagination">
      <% if (currentPage > 1) { %>
        <a href="?page=<%= currentPage - 1 %>" class="prev">Previous</a>
      <% } %>
      <% for (let i = 1; i <= totalPages; i++) { %>
        <a href="?page=<%= i %>" class="page-link <%= currentPage === i ? 'active' : '' %>"><%= i %></a>
      <% } %>
      <% if (currentPage < totalPages) { %>
        <a href="?page=<%= currentPage + 1 %>" class="next">Next</a>
      <% } %>
    </div>
  <% } %>
</div>

<style>
    .modal { display: none; position: fixed; z-index: 1; left: 0; top: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.4); }
    .modal-content { background-color: #fefefe; margin: 15% auto; padding: 20px; border: 1px solid #888; width: 50%; }
    .btn { margin-right: 10px; }
</style>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>

 //search   
 document.getElementById('searchBtn').addEventListener('click', () => {
    const searchText = document.getElementById('search').value;

    if (!searchText) {
        alert("Please enter an Order ID to search.");
        return;
    }

    // Redirect to `my-orders` with the `orderId` query parameter
    window.location.href = `/my-orders?orderId=${encodeURIComponent(searchText)}`;
});


//cancelorder
document.addEventListener('DOMContentLoaded', function () {
    document.querySelectorAll('.cancel-order-btn').forEach(btn => {
        btn.addEventListener('click', (e) => {
            const itemOrderId = e.target.getAttribute('data-item-order-id');
            document.getElementById('cancelItemOrderId').value = itemOrderId;
            document.getElementById('cancelModal').style.display = 'block';
        });
    });

    window.closeCancelModal = function() {
        document.getElementById('cancelModal').style.display = 'none';
    };

    window.submitCancellation = async function(event) {
        event.preventDefault();
        
        const form = document.getElementById('cancelForm');
        const formData = new FormData(form);
        const itemOrderId = formData.get('itemOrderId');
        const reason = formData.get('reason');

        try {
            const response = await fetch('/cancel-order', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ itemOrderId, reason })
            });

            const result = await response.json();

            if (result.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Order Cancelled',
                    text: result.message,
                    confirmButtonText: 'OK'
                }).then(() => {
                    closeCancelModal();
                    location.reload();
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Cancellation Failed',
                    text: 'Error cancelling order: ' + result.message,
                    confirmButtonText: 'OK'
                });
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Unexpected Error',
                text: 'Error cancelling order: ' + (error.message || 'Unexpected error occurred'),
                confirmButtonText: 'OK'
            });
        }
    };
});
</script>
    
<script>

document.querySelectorAll('.return-order-btn').forEach(button => {
  button.addEventListener('click', function (event) {
    event.preventDefault();
    const itemOrderId = this.getAttribute('data-item-order-id');

    Swal.fire({
      title: 'Return Reason',
      input: 'text',
      inputPlaceholder: 'Enter your reason for returning...',
      showCancelButton: true,
      confirmButtonText: 'Submit Return Request',
      cancelButtonText: 'Cancel',
      preConfirm: (returnReason) => {
        if (!returnReason) {
          Swal.showValidationMessage('You need to enter a reason for returning!');
        }
        return returnReason;
      }
    }).then((result) => {
      if (result.isConfirmed) {
        const returnReason = result.value;

        fetch('/myorder/return-order', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ itemOrderId, returnReason }),
        })
        .then(response => response.json())
        .then(data => {
          if (data.message === 'Return request submitted successfully') {
            Swal.fire(
              'Submitted!',
              'Your return request has been submitted.',
              'success'
            ).then(() => {
              location.reload();
            });
          } else {
            Swal.fire('Error!', data.message, 'error');
          }
        })
        .catch(error => {
          console.error('Error submitting return request:', error);
          Swal.fire('Error!', 'There was an error submitting your return request.', 'error');
        });
      }
    });
  });
});

</script> 

<%- include("../../views/partials/user/footer") %>    