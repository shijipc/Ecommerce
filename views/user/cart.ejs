<%- include("../../views/partials/user/header") %>
<style>
    .cart-container {
        display: flex;
        justify-content: space-between;
    }
    .cart-items {
        width: 65%;
    }
    .cart-summary {
        width: 30%;
        padding: 20px;
        background-color: #f9f9f9;
        border-radius: 5px;
    }
    .cart-item {
        display: flex;
        border-bottom: 1px solid #eee;
        padding: 15px 0;
    }
    .item-image {
        width: 80px;
        height: 80px;
        object-fit: cover;
        margin-right: 15px;
    }
    .item-details {
        flex-grow: 1;
    }
    .product-name {
        font-size: 14px;
        margin-bottom: 5px;
        padding-left: 15px;
    }
    .product-price {
        font-weight: bold;
        margin-bottom: 5px;
        font-size: 14px;
    }
    .quantity-control {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
    }
    .quantity-control button {
        width: 25px;
        height: 25px;
        background-color: #f0f0f0;
        border: none;
        cursor: pointer;
        font-size: 12px;
    }
    .quantity-control span {
        margin: 0 10px;
        font-size: 14px;
    }
    .cart-actions button {
        margin-right: 10px;
        padding: 3px 8px;
        background-color: #f0f0f0;
        border: none;
        cursor: pointer;
        font-size: 12px;
    }
    .summary-item {
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
        font-size: 14px;
    }
    .summary-total {
        font-weight: bold;
        margin-top: 10px;
        padding-top: 10px;
        border-top: 1px solid #eee;
    }
    .place-order-btn {
        width: 100%;
        background-color: #4CAF50;
        color: white;
        border: none;
        cursor: pointer;
        margin-top: 20px;
        font-size: 14px;
    }
    .quantity-buttons {
    display: flex;
    align-items: center;
  }

  .quantity-buttons button {
    background-color: #f9f9f7; 
    color: black; 
    border: 1px solid #ccc; 
    padding: 5px 10px; 
    font-size: 18px; 
    cursor: pointer; 
    transition: background-color 0.3s ease; 
    border-radius: 0; /
  }

  .quantity-buttons button:hover {
    background-color: #e9e8e6; 
  }

  .quantity-buttons .quantity-display {
    margin: 0 15px; 
    font-size: 18px; 
    min-width: 40px; 
    text-align: center;
  }
</style>
</head>
<body>
    <div class="breadcrumbs">
        <div class="container">
            <div class="row">
                <div class="col">
                    <p class="bread"><span><a href="/">Home</a></span> / <span>Shopping Cart</span></p>
                </div>
            </div>
        </div>
    </div>

    <div class="colorlib-product">
     
        <div class="container">
            <h2>Shopping Cart</h2>
            <div class="cart-container">
                <div class="cart-items">
                    <% if (cart && cart.items && cart.items.length > 0) { %>
                        <% cart.items.forEach((item, index) => { %>
                            <% if (item.product) { %>
                                <div class="cart-item" data-product-id="<%= item.product._id %>">
                                    <img src="/uploads/product-images/<%= item.product.productImage[0] %>" alt="Product Image" class="item-image">                                 
                                    <div class="item-details">
                                        <h5 class="product-name" style="font-size: 18px;"><%= item.product.productName %></h5>

                                        <p class="product-price">
                                            ₹<% if (item.product.offerPrice && item.product.offerPrice < item.product.salePrice) { %>
                                             
                                              <del><%= item.product.regularPrice %></del> ₹<%= item.product.offerPrice %>
                                            <% } else if (item.product.salePrice < item.product.regularPrice) { %>
                                              
                                              <del><%= item.product.regularPrice %></del> ₹<%= item.product.salePrice %>
                                            <% } else if (item.product.salePrice === item.product.regularPrice && item.product.offerPrice && item.productId.offerPrice < item.productId.salePrice) { %>
                                              
                                              <del><%= item.product.regularPrice %></del> ₹<%= item.product.offerPrice %>
                                            <% } else { %>
                                              
                                              <%= item.product.regularPrice %>
                                            <% } %>
                                          </p>
                                        <div class="quantity-control">
                                            <form id="updateQuantityForm-<%= item.product._id %>-<%= item.size %>" onsubmit="return false;">
                                                <input type="hidden" name="productId" value="<%= item.product._id %>">
                                                <input type="hidden" name="size" value="<%= item.size %>">
                                                <div class="quantity-buttons">
                                                    <button type="button" style="color: black;" class="btn btn-secondary" 
                                                        onclick="updateQuantity('<%= item.product._id %>', -1, '<%= item.size %>')">-</button>
                                                    <span class="quantity-display"><%= item.quantity %></span>
                                                    <button type="button" class="btn btn-secondary" 
                                                        onclick="updateQuantity('<%= item.product._id %>', 1, '<%= item.size %>')">+</button>
                                                </div>
                                            </form>
                                        </div>
                                        <div class="product-size">Size: <%= item.size %></div>
                                        <!-- <div class="product-status">Status: <%= item.product.status %></div> -->
                                        <!-- <div class="product-stock">In stock: <%= item.product.quantity %></div> -->
                                        <div class="cart-actions">                                           
                                            <div class="cart-item" data-product-id="<%= item.product._id %>" data-size="<%= item.size %>">
                                                <form id="removeItemForm-<%= item.product._id %>" onsubmit="return false;">
                                                    <input type="hidden" name="productId" value="<%= item.product._id %>">
                                                    <input type="hidden" name="size" value="<%= item.size %>">
                                                    <button type="button" style="background-color: rgb(223, 84, 60); color: black;" 
                                                        class="btn btn-danger" 
                                                        onclick="removeFromCart('<%= item.product._id %>', '<%= item.size %>')">
                                                        REMOVE
                                                    </button>
                                                </form>                                             
                                            </div>                                      
                                        </div>
                                        
                                    </div>
                                </div>
                            <% } else { %>
                                <div class="cart-item">
                                    <p>Product has been removed from the store and is no longer available.</p>
                                    <form id="removeDeletedItemForm-<%= item._id %>" onsubmit="return false;">
                                        <input type="hidden" name="productId" value="<%= item._id %>">

                                        <button type="button" class="btn btn-danger" onclick="removeDeletedItem('<%= item._id %>')">REMOVE FROM CART</button>
                                    </form>
                                </div>
                            <% } %>
                        <% }) %>
                    <% } else { %>
                        <p>Your cart is empty.</p>
                    <% } %>
                    
                </div>
        
                <div class="cart-summary">
                    <h3>PRICE DETAILS</h3>
                    <div class="summary-item">
                        <span>Total price (<%= distinctProductCount %> items)</span>
                        <span>₹<%= (totalPrice-totalDiscount).toFixed(2)  %></span>
                    </div>
                    <div class="summary-item">
                        <span>Discount</span>
                        <span>-₹<%= Math.round(totalDiscount) || 0 %></span>
                    </div>
                    <!-- <div class="summary-item">
                        <span>Coupons Discount</span>
                        <span>-₹ 0</span>
                    </div> -->
                    <div class="summary-item">
                        <span>Delivery Charges</span>
                        <span><%= deliveryCharges ? `₹${deliveryCharges}` : 'Free' %></span>
                    </div>
                    <div class="summary-total">
                        <span>Total Amount</span>
                        <span>₹ <%= Math.round(totalAmount) %></span>
                    </div>
                    <a href="#" id="checkout-link"  class="place-order-btn">
                        <button id="buy-now-btn" style="background-color: #27d030;">BUY NOW</button></a>
                </div>
            </div>
        </div>

    <%- include("../../views/partials/user/footer") %> 
<script>    

function updateQuantity(productId, change, itemSize) {
    fetch('/cart/update-quantity', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]')?.getAttribute('content')
        },
        body: JSON.stringify({ 
            productId, 
            change,
            size: itemSize
        })
    })
    .then(response => response.json())
    .then(data => {
        if (!data.success) {
            throw new Error(data.error);
        }
        
        // Update quantity display
        const form = document.querySelector(`#updateQuantityForm-${productId}-${itemSize}`);
        if (form) {
            const quantityDisplay = form.querySelector('.quantity-display');
            if (quantityDisplay) {
                quantityDisplay.textContent = data.updatedQuantity;
            }
        }

        // Update cart summary with new calculations
        updateCartSummary(data.cartSummary);
        
        Swal.fire({
            toast: true,
            position: 'top-end',
            icon: 'success',
            title: 'Quantity updated',
            showConfirmButton: false,
            timer: 1500
        });
    })
    .catch(error => {
        Swal.fire({
            toast: true,
            position: 'top-end',
            icon: 'error',
            title: error.message,
            showConfirmButton: false,
            timer: 2000
        });
    });
}

// Function to update cart summary with correct calculations
function updateCartSummary(summary) {
    if (!summary) return;
    
    // Update items count
    const itemsCountElement = document.querySelector('.summary-item:first-child span:first-child');
    if (itemsCountElement) {
        itemsCountElement.textContent = `Total price (${summary.totalItems} items)`;
    }

    // Update actual total price (before discount)
    const totalPriceElement = document.querySelector('.summary-item:first-child span:last-child');
    if (totalPriceElement) {
        totalPriceElement.textContent = `₹${summary.totalPrice.toFixed(2)}`;
    }

    // Update discount
    const discountElement = document.querySelector('.summary-item:nth-child(2) span:last-child');
    if (discountElement) {
        discountElement.textContent = `-₹${Math.round(summary.totalDiscount)}`;
    }

    // Update delivery charges
    const deliveryElement = document.querySelector('.summary-item:nth-child(3) span:last-child');
    if (deliveryElement) {
        deliveryElement.textContent = summary.deliveryCharges > 0 ? `₹${summary.deliveryCharges}` : 'Free';
    }

    // Update total amount (final price after discount)
    const totalAmountElement = document.querySelector('.summary-total span:last-child');
    if (totalAmountElement) {
        totalAmountElement.textContent = `₹${Math.round(summary.totalAmount)}`;
    }
}


    async function removeFromCart(productId,size) {
    Swal.fire({
        title: 'Are you sure?',
        text: 'Do you want to remove this item from the cart?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, remove it!'
    }).then(async (result) => {
        if (result.isConfirmed) {
            try {
                const response = await fetch('/cart/remove', { 
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productId, size })
                    // body: JSON.stringify({ productId, size: document.querySelector(`[data-product-id="${productId}"] .item.size`).textContent.split(': ')[1] })
                });


                const data = await response.json(); 

                if (response.ok && data.success) {
                    
                    Swal.fire(
                        'Removed!',
                        'The item has been removed from your cart.',
                        'success'
                    ).then(() => {
                        location.reload(); 
                    });
                } else {
                   
                    Swal.fire('Failed', data.message || 'Failed to remove the item', 'error');
                }
            } catch (error) {
                Swal.fire(
                    'Error',
                    'An error occurred while removing the item',
                    'error'
                );
                console.error('Error removing item:', error);
            }
        }
    });
}


function removeDeletedItem(itemId) {
    Swal.fire({
        title: 'Are you sure?',
        text: 'Do you want to remove this deleted item from the cart?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, remove it!'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch('/cart/remove-deleted-item', {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]')?.getAttribute('content')
                },
                body: JSON.stringify({ itemId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: 'Removed!',
                        text: 'The deleted item has been removed from your cart.',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        // Remove the item from the DOM
                        const itemElement = document.querySelector(`#removeDeletedItemForm-${itemId}`).closest('.cart-item');
                        if (itemElement) {
                            itemElement.remove();
                        }
                        
                        // Check if the cart is empty after removal
                        const cartItems = document.querySelectorAll('.cart-item');
                        if (cartItems.length === 0) {
                            const cartContainer = document.querySelector('.cart-items');
                            if (cartContainer) {
                                cartContainer.innerHTML = '<p>Your cart is empty.</p>';
                            }
                        }

                        // Optionally, update the cart count in the header if you have such an element
                        updateCartCount(cartItems.length);
                    });
                } else {
                    Swal.fire('Error', data.message || 'Failed to remove item', 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire('Error', 'An error occurred while removing the item', 'error');
            });
        }
    });
}

document.querySelector('#checkout-link').addEventListener('click', function(e) {
    e.preventDefault();
    const cartId = '<%= cart._id %>';
    window.location.href = `/cart/checkout/${cartId}`;
});
</script>

<style>
   
@media (max-width: 768px) {
    .cart-container {
        flex-direction: column; 
        align-items: center;
    }

    .cart-items, .cart-summary {
        width: 100%; 
        max-width: 400px; 
        box-sizing: border-box;
        margin: 0 auto; 
    }
    .cart-item {
        display: flex;
        flex-direction: column;
        margin-bottom: 20px;
        width: 100%; 
        max-width: 400px;
    }

    .item-image {
        order: 1; 
        width: 100%; 
        height: auto;
        max-height: 200px;
        object-fit: cover;
        border-radius: 5px;
        margin-bottom: 10px;
    }

    .item-details {
        order: 2; 
        margin-bottom: 10px; 
        text-align: center;
    }

    .product-size {
        order: 3; 
        margin-bottom: 10px;
        text-align: center;
    }

    .product-price {
        order: 4; 
        margin-bottom: 10px;
        font-weight: bold;
        text-align: center;
    }

    .quantity-control {
        order: 5; 
        margin-bottom: 10px;
        display: flex;
        justify-content: center; 
        align-items: center
    }
    .quantity-display {
        margin: 0 10px; 
        font-size: 16px;
        font-weight: bold;
        text-align: center;
    }

    .cart-actions {
        order: 6; 
        margin-top: 10px;
        text-align: center;
    }
    .cart-summary {
        order: 7; 
        margin-top: 20px; 
        padding: 15px; 
        text-align: center;
        border-top: 1px solid #ddd;
    }
}
</style>
    