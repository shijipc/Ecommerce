
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Details</title>
    
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        .container {
          width: 80%;
          margin: auto;
          padding: 10px;
          border-radius: 10px;
        }
        h2 {
            text-align: center;
        }
        .info {
            display: flex;
            justify-content: space-between;
        }
        .section {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 2px;
            border-radius: 5px;
        }
        .product {
            display: flex;
            align-items: center;
        }
        .product img {
            width: 200px;
            height: 200px;
            margin-right: 10px;
        }
        .card {
           display: flex;
           align-items: flex-start;
           margin-bottom: 20px;
           padding: 15px;
           border: 1px solid #ddd;
           border-radius: 10px;
           background-color: #fff;
       }

      .card-content {
        display: flex;
        width: 100%;
        justify-content: space-between;
      }

    .product-image {
      width: 100px;
      height: 100px;
      border-radius: 5px;
      object-fit: cover;
    }

   .product-details {
    flex-grow: 2;
    padding: 0 15px;
   }

.product-status {
  flex-grow: 1; 
  display: flex; 
  align-items: center;
  justify-content:  flex-start;
  margin-left: -20px;
}

.total-price {
  text-align: center;
  margin-top: 20px;
  font-size: 1.5em;
  font-weight: bold;
  color: #333;
}
.coin-icon {
  color: gold;
  margin-right: 5px;
}

.status-radio {
  display: inline-block;
  width: 15px;
  height: 15px;
  border-radius: 50%;
  margin-right: 8px;
}

/* Status-specific colors */
.status-radio.delivered {
  background-color: #28a745; 
}

.status-radio.pending {
  background-color: #ffc107;
}

.status-radio.cancelled {
  background-color: #dc3545; 
}

.status-radio.returned {
  background-color: #6c757d; 
}

</style>
   
</head>
<body>
  <div class="header">
    <%- include("../../views/partials/user/header") %>
  </div>
    <div class="container">
        <h2>Order Details</h2>

        <div class="section info">
          <div>
              <h3>Delivery Address</h3>
              <p><%= order.user.name %></p>
              <p><%= order.address.house %>, <br>
                <%= order.address.place %>, <br>
                <%= order.address.city %>, <%= order.address.state %> - <%= order.address.pin %></p>
              <p>Phone: <%= order.address.contactNo %></p>
              <!-- <p class="text-muted">This item is tracked by <%= order.itemOrderId %></p> -->
          </div>
      
          <div>
              <h3>Your Rewards in this Item</h3>
            
                  <p class="text-success" style="font-size: large;">
                      <span class="coin-icon">&#9733;</span> 
                      ₹<%= ((selectedItem.regularPrice - selectedItem.salePrice) * selectedItem.quantity).toFixed(2) %> Saved 
                  </p>
             

              
      
              <div style="font-size: large;">
                 
                  <% if (couponCode) { %>
                    <p style="font-size: large;" class="text-info">
                        Applied Coupon Code: <%= couponCode %>
                    </p>
                <% } %>

                 
              </div>
      
              <h6>Payment Method</h6> 
              <% if (order.payment && order.payment.length > 0) { %>
                  <p><span><%= order.payment[0].method %></span></p>
              <% } else { %>
                  <p>No payment method found</p>
              <% } %>
      
              <h6>Payment Status</h6> 
              <% if (order.payment && order.payment.length > 0) { %>
                  <p>
                      <span><%= order.payment[0].status %></span>
                      <% if (order.payment[0].status === 'pending' && order.payment[0].method !== 'Cash On Delivery' && order.items.itemOrderStatus !== 'Cancelled') { %>
                          <button id="payNowBtn" class="btn btn-success" style="margin-left: 10px;" data-order-id="<%= order._id %>" data-razorpay-order-id="<%= order.payment[0].razorpayOrderId %>">
                              Pay Now
                          </button>
                      <% } %>
                  </p>
              <% } else { %>
                  <p>No payment status found</p>
              <% } %>                          
          </div>
      
          <div class="col-md-4">
              <h5>Order actions</h5>
             
                  <% if (selectedItem.itemOrderStatus === 'Delivered') { %>
                      <button class="btn btn-warning mb-2 download-invoice-btn" 
                              data-order-id="<%= order.orderId %>" 
                              data-item-id="<%=selectedItem.itemOrderId %>">
                          <i class="fas fa-download"></i> Download Invoice
                      </button>
                  <% } %>
             
          </div>
      </div>
      
        
       <!-- Order Items Section -->

       <div class="section product card">
        <div class="card-content">
            <!-- Check if product image exists -->
            <% if (selectedItem.product.productImage && selectedItem.product.productImage.length > 0) { %>
                <img src="/uploads/product-images/<%= selectedItem.product.productImage[0] %>" 
                alt="<%= selectedItem.product.productName %>" 
                class="img-fluid"
                onerror="this.src='/images/placeholder-shoe.jpeg'; this.onerror=null;">
            <% } else { %>
                <img src="/path/to/placeholder-shoe.jpeg" 
                     alt="Product image not available" 
                     class="img-fluid">
            <% } %>
            
            <div class="product-details">
                <h5>
                    <%= selectedItem.product.brand ? selectedItem.product.brand.name : 'No Brand' %> 
                    <%= selectedItem.product.productName %>
                </h5>
                <p>Color: <%= selectedItem.product.color || 'N/A' %> | SKU: <%= selectedItem.product.skuNumber || 'N/A' %></p>
                <p>Size: <%= selectedItem.size || 'N/A' %></p>
                <p style="font-size: medium;">Quantity: <%= selectedItem.quantity %></p>
                <p style="font-size: medium;">Actual price: ₹<%= selectedItem.regularPrice * selectedItem.quantity %></p>
                <p style="font-size: medium;" class="text-success">Sale price: ₹<%= selectedItem.salePrice %></p>               
                <% if (selectedItem.regularPrice > selectedItem.salePrice) { %>
                    <p style="font-size: medium;" class="text-danger">Discount: ₹<%= (selectedItem.regularPrice - selectedItem.salePrice) * selectedItem.quantity %></p>
                <% } %>
                <% if (selectedItem.discount && selectedItem.discount > 0) { %>
                    <p style="font-size: medium;" class="text-info">Coupon discount: ₹<%= selectedItem.discount.toFixed(2) %></p>
                <% } %>
                <p class="text-success">Total: ₹<%= (selectedItem.saledPrice).toFixed(2) %></p>
               
            </div>
            <div class="product-status">
                <p class="status-label" style="text-align: center; font-size: medium;">
                    Status: 
                    <span class="status-radio <%= selectedItem.itemOrderStatus.toLowerCase() %>"></span> 
                    <%= selectedItem.itemOrderStatus %>
                </p>
            </div>
        </div>
    </div>

    <% if (order.items.length > 1) { %>
     
      <h5>Other items in this order</h5>

  <% order.items.forEach(function(item) { %>
    <% if (item.product._id.toString() !== selectedItem.product._id.toString()) { %>
      <div class="card mb-4">
        <div class="card-body">
          <div class="row">
            <div class="col-md-2">
              <% if (item.product.productImage && item.product.productImage.length > 0) { %>
                <img src="/uploads/product-images/<%= item.product.productImage[0] %>" 
                     alt="<%= item.product.productName %>" 
                     class="img-fluid"
                     onerror="this.src='/images/placeholder-shoe.jpeg'; this.onerror=null;">
              <% } else { %>
                <img src="/path/to/placeholder-shoe.jpeg" 
                     alt="Product image not available" 
                     class="img-fluid">
              <% } %>
            </div>
            

 <div class="product-details">
  <h5>
      <%= item.product.brand ? item.product.brand.name : 'No Brand' %> 
      <%= item.product.productName %>
  </h5>
  <p>Color: <%= item.product.color || 'N/A' %> | SKU: <%= item.product.skuNumber || 'N/A' %></p>
  <p>Size: <%= item.size || 'N/A' %></p>
  <p style="font-size: medium;">Quantity: <%= item.quantity %></p>
  <p style="font-size: medium;">Actual price: ₹<%= item.regularPrice * item.quantity %></p>
  <p style="font-size: medium;" class="text-success">Sale price: ₹<%= item.salePrice %></p>
  <% if (item.regularPrice > item.salePrice) { %>
      <p style="font-size: medium;" class="text-danger">Discount: ₹<%= (item.regularPrice - item.salePrice) * item.quantity %></p>
  <% } %>
  <% if (item.discount && item.discount > 0) { %>
      <p style="font-size: medium;" class="text-info">Coupon discount: ₹<%= item.discount.toFixed(2) %></p>
  <% } %>
  <p class="text-success">Total: ₹<%= (item.saledPrice).toFixed(2) %></p>
 
</div>
<div class="product-status">
  <p class="status-label" style="text-align: center; font-size: medium;">
      Status: 
      <span class="status-radio <%= item.itemOrderStatus.toLowerCase() %>"></span> 
      <%= item.itemOrderStatus %>
  </p>
</div>

    <% } %>
  <% }); %>
  <% } %>
</div>
</div>
</div>

<!-- 
  Total Price Section
  <div class="section total-price">
    <h3>Total Price</h3>
    <p>₹<%= order.totalPrice %></p>
  </div>
 </div> -->


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
    
    document.getElementById('payNowBtn').addEventListener('click', function() {
  const orderId = this.getAttribute('data-order-id');
  const razorpayOrderId = this.getAttribute('data-razorpay-order-id');

  console.log("Initiating payment with order ID:", orderId);
  console.log("Using Razorpay Order ID:", razorpayOrderId);

  fetch(`/my-order/order-details/re-checkout/${orderId}`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({ razorpayOrderId }),
  })
  .then(response => {
    console.log("Received response:", response);
    return response.json();
  })
  .then(data => {
    console.log("Parsed response data:", data);

    if (data.success) {
      const options = {
        "key": "<%= process.env.RAZORPAY_KEY_ID %>",
        "amount": data.amount,
        "currency": "INR",
        "name": "Shoe Mart",
        "description": "Re-payment for Order",
        "order_id": data.razorpayOrderId,
        "handler": function (response) {
          console.log("Payment successful. Verifying payment with response:", response);
          verifyPayment(response, orderId);
        },
        "prefill": {
          "name": "<%= order.user.name %>",
          "email": "<%= order.user.email %>",
          "contact": "<%= order.user.phone %>"
        },
        "theme": {
          "color": "#3399cc"
        }
      };
      const rzp1 = new Razorpay(options);
      rzp1.open();
    } else {
      console.error("Payment initialization failed:", data.message);
      alert(data.message || "Unable to initialize payment. Please try again.");
    }
  })
  .catch((error) => {
    console.error("Fetch error or server issue:", error);
    alert("An error occurred. Please check your network connection and try again.");
  });
});

function verifyPayment(response, orderId) {
  console.log("Verifying payment for order:", orderId, "with response:", response);

  fetch('/verify-payment', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      razorpay_payment_id: response.razorpay_payment_id,
      razorpay_order_id: response.razorpay_order_id,
      razorpay_signature: response.razorpay_signature,
      orderId: orderId
    }),
  })
  .then(response => response.json())
  .then(data => {
    console.log("Verification response data:", data);
    if (data.success) {
      window.location.href = '/orderConfirmation';
    } else {
      alert(data.message || "Payment verification failed. Please contact support.");
    }
  })
  .catch((error) => {
    console.error("Verification fetch error:", error);
    alert("An error occurred during payment verification. Please contact support.");
  });
}

    </script>

    <!-- invoice -->
  <script>
   document.querySelectorAll('.download-invoice-btn').forEach(button => {
    button.addEventListener('click', async function() {
        const orderId = this.getAttribute('data-order-id');
        const itemId = this.getAttribute('data-item-id');

        try {
            const response = await fetch(`/my-order/${orderId}/download-invoice/${itemId}`, {
                method: 'GET',
                headers: {
                    'Accept': 'application/pdf',
                },
            });

            if (!response.ok) {
                console.log('Download failed with status:', response.status, response.statusText);
                alert('Failed to download invoice. Please try again.');
                return;
            }

            const blob = await response.blob();
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.style.display = 'none';
            a.href = url;
            a.download = `Invoice-${orderId}.pdf`;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            window.URL.revokeObjectURL(url);
        } catch (error) {
            console.error('Error downloading invoice:', error);
            alert('Error downloading the invoice.');
        }
    });
});

</script>

</body>
</html>
<%- include("../../views/partials/user/footer") %>  
<style>
 
.container {
  width: 100%;
  max-width: 100%;
  margin: 0 auto;
  padding: 20px;
}


.section {
  display: flex;
  justify-content: space-between;
  margin-bottom: 5px;
}

.card-content {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.product-details, .product-status {
  text-align: left; 
}

@media (max-width: 768px) {
  .container {
    padding: 10px;
    text-align: left; 
  }

  .section {
    flex-direction: column; 
    align-items: flex-start; 
    margin-bottom: 20px;
  }

  .card-content {
  display: flex; 
  flex-direction: column; 
  align-items: center;
  text-align: center; 
  padding: 10px; 
}

.product-image {
  display: block;
  margin: 0 auto; 
  max-width: 100%; 
  height: auto; 
  object-fit: contain; 
}

.product-details {
  width: 100%; 
  max-width: 600px; 
  padding: 10px; 
}

@media (max-width: 768px) {
  .card-content {
    padding: 5px; 
  }

  .product-image {
    max-width: 90%; 
  }

  .product-details {
    max-width: 90%; 
  }
}

  .product-status {
    width: 100%;
    text-align: left; 
  }

  .btn {
    width: 100%; 
    margin: 10px 0;
  }

  .total-price {
    text-align: left;
  }

  .info {
    flex-direction: column; 
    align-items: flex-start; 
    gap: 20px;
  }
}

</style>